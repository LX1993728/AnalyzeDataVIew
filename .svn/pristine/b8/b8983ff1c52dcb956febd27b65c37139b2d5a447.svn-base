<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.anrong.wulan.admin.dao.RetentionDayMapper">
	<resultMap id="BaseResultMap" type="com.anrong.wulan.admin.po.RetentionUserHour">
		<result column="log_type" property="logType" jdbcType="VARCHAR" />
		<result column="app_key" property="appKey" jdbcType="VARCHAR" />
		<result column="app_version" property="appVersion" jdbcType="VARCHAR" />
		<result column="ONE_DAY_RETENTION" property="oneDayRetention"
			jdbcType="INTEGER" />
		<result column="SEVEN_DAY_RETENTION" property="sevenDayRetention"
			jdbcType="INTEGER" />
		<result column="THIRTY_DAY_RETENTION" property="thirtyDayRetention"
			jdbcType="INTEGER" />
		<result column="STATISTICS_DATE" property="ststisticsDate"
			jdbcType="TIMESTAMP" />
		<!-- <result column="newUser" property="newUser" jdbcType="INTEGER" />
		<result column="oneRates" property="oneRates" jdbcType="DOUBLE" />
		<result column="sevenRates" property="sevenRates" jdbcType="DOUBLE" />
		<result column="thirtyRates" property="thirtyRates" jdbcType="DOUBLE" /> -->
	</resultMap>
<!-- 	<select id="listRetent" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		SELECT b.STATISTICS_DATE ststisticsDate,SUM(b.NEW_USER)
		newUser,a.ONE_DAY_RETENTION oneDayRetention,
		a.SEVEN_DAY_RETENTION
		sevenDayRetention,a.THIRTY_DAY_RETENTION thirtyDayRetention,
		ONE_DAY_RETENTION/SUM(b.NEW_USER) oneRates ,SEVEN_DAY_RETENTION/SUM(b.NEW_USER)
		sevenRates ,THIRTY_DAY_RETENTION/SUM(b.NEW_USER) thirtyRates
		FROM NEW_USER_HOUR b 
		LEFT JOIN RETENTION_DAY a
		ON a.LOG_TYPE=b.LOG_TYPE AND
		a.APP_KEY=b.APP_KEY
		AND
		a.APP_VERSION=b.APP_VERSION AND a.STATISTICS_DATE=b.STATISTICS_DATE
		<where>
			b.APP_KEY =
			#{appKey,jdbcType=VARCHAR}
			<if test="startTime!=null and endTime!=null">
				AND b.STATISTICS_DATE BETWEEN
				DATE_FORMAT(#{startTime,jdbcType=VARCHAR},'%Y-%m-%d')
				AND
				DATE_FORMAT(#{endTime,jdbcType=VARCHAR},'%Y-%m-%d')
			</if>
			AND UPPER(b.LOG_TYPE) IN
			<if test="logType!=null">
				(#{logType,jdbcType=VARCHAR})
			</if>
			<if test="logTypes!=null and logTypes.length>0">
				<foreach collection="logTypes" item="item" index="index"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="versions!=null and versions.length>0">
				AND b.APP_VERSION IN
				<foreach collection="versions" item="item" index="index"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
		GROUP BY b.STATISTICS_DATE
		ORDER BY b.STATISTICS_DATE
	</select>
	<select id="listAllAvg" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		SELECT b.STATISTICS_DATE ststisticsDate,b.NEW_USER
		newUser,a.ONE_DAY_RETENTION oneDayRetention,
		a.SEVEN_DAY_RETENTION
		sevenDayRetention,a.THIRTY_DAY_RETENTION thirtyDayRetention,
		ONE_DAY_RETENTION/new_user oneRates ,SEVEN_DAY_RETENTION/new_user
		sevenRates ,THIRTY_DAY_RETENTION/new_user thirtyRates
		FROM ( SELECT
		SERVERID, LOG_TYPE, APP_KEY, APP_VERSION, SUM(NEW_USER)
		NEW_USER ,
		STATISTICS_DATE
		FROM NEW_USER_HOUR GROUP BY STATISTICS_DATE ) b LEFT
		JOIN RETENTION_DAY a
		ON a.LOG_TYPE=b.LOG_TYPE AND
		a.APP_KEY=b.APP_KEY
		AND
		a.APP_VERSION=b.APP_VERSION AND a.STATISTICS_DATE=b.STATISTICS_DATE
		<where>
			b.APP_KEY =
			#{appKey,jdbcType=VARCHAR}
			AND UPPER(b.LOG_TYPE) IN
			<if test="logType!=null">
				(#{logType,jdbcType=VARCHAR})
			</if>
			<if test="logTypes!=null and logTypes.length>0">
				<foreach collection="logTypes" item="item" index="index"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="versions!=null and versions.length>0">
				AND b.APP_VERSION IN
				<foreach collection="versions" item="item" index="index"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
		ORDER BY b.STATISTICS_DATE
	</select>

	<select id="queryTop10Retention" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		SELECT b.STATISTICS_DATE ststisticsDate,SUM(b.NEW_USER)
		newUser,a.ONE_DAY_RETENTION oneDayRetention,
		a.SEVEN_DAY_RETENTION
		sevenDayRetention,a.THIRTY_DAY_RETENTION thirtyDayRetention,
		ONE_DAY_RETENTION/SUM(b.NEW_USER) oneRates ,SEVEN_DAY_RETENTION/SUM(b.NEW_USER)
		sevenRates ,THIRTY_DAY_RETENTION/SUM(b.NEW_USER) thirtyRates
		FROM NEW_USER_HOUR b 
		LEFT JOIN RETENTION_DAY a
		ON a.LOG_TYPE=b.LOG_TYPE AND
		a.APP_KEY=b.APP_KEY
		AND
		a.APP_VERSION=b.APP_VERSION AND a.STATISTICS_DATE=b.STATISTICS_DATE
		<where>
			b.STATISTICS_DATE BETWEEN
			DATE_FORMAT(#{startTime,jdbcType=VARCHAR},'%Y-%m-%d')
			AND
			DATE_FORMAT(#{endTime,jdbcType=VARCHAR},'%Y-%m-%d')
			AND b.APP_KEY =
			#{appKey,jdbcType=VARCHAR}
			AND UPPER(b.LOG_TYPE) IN
			<if test="logType!=null">
				(#{logType,jdbcType=VARCHAR})
			</if>
			<if test="logTypes!=null and logTypes.length>0">
				<foreach collection="logTypes" item="item" index="index"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="versions!=null and versions.length>0">
				AND b.APP_VERSION IN
				<foreach collection="versions" item="item" index="index"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
		GROUP BY b.STATISTICS_DATE
	</select> -->
	<!-- THIRTY_DAY_RETENTION -->
	<select id="listRetent" parameterType="java.lang.Long" resultMap="BaseResultMap">
	    SELECT THIRTY_DAY_RETENTION thirtyDayRetention,
		STATISTICS_DATE
		ststisticsDate FROM RETENTION_DAY
	    <include refid="Where_AppKeyOrLogType" />
	</select>
	<sql id="Where_AppKeyOrLogType">
		<where>
			STATISTICS_DATE BETWEEN
			DATE_FORMAT(#{startTime,jdbcType=VARCHAR},'%Y-%m-%d')
			AND
			DATE_FORMAT(#{endTime,jdbcType=VARCHAR},'%Y-%m-%d')
			AND APP_KEY =
			#{appKey,jdbcType=VARCHAR}
			AND UPPER(LOG_TYPE) IN
			<if test="logType!=null">
				(#{logType,jdbcType=VARCHAR})
			</if>
			<if test="logTypes!=null and logTypes.length>0">
				<foreach collection="logTypes" item="item" index="index"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="versions!=null and versions.length>0">
				AND APP_VERSION IN
				<foreach collection="versions" item="item" index="index"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
	</sql>
</mapper>