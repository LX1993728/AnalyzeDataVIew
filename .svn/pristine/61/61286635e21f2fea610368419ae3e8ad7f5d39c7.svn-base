<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.anrong.wulan.admin.dao.NewUserNetMapper">
	<resultMap id="BaseResultMap" type="com.anrong.wulan.admin.po.NewUserNet">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="serverid" property="serverid" jdbcType="VARCHAR" />
		<result column="log_type" property="logType" jdbcType="VARCHAR" />
		<result column="app_key" property="appKey" jdbcType="VARCHAR" />
		<result column="app_version" property="appVersion" jdbcType="VARCHAR" />
		<result column="network" property="network" jdbcType="VARCHAR" />
		<result column="new_user" property="newUser" jdbcType="INTEGER" />
		<result column="statistics_date" property="statisticsDate"
			jdbcType="TIMESTAMP" />
		<result column="affiliated_org" property="affiliatedOrg"
			jdbcType="VARCHAR" />
		<result column="affiliated_region" property="affiliatedRegion"
			jdbcType="VARCHAR" />
		<result column="newUserCount" property="newUserCount" jdbcType="INTEGER" />
		<result column="activeUser" property="activeUser" jdbcType="INTEGER" />
		<result column="newUserRate" property="newUserRate" jdbcType="DOUBLE" />
		<result column="start" property="start" jdbcType="INTEGER" />
		<result column="userCount" property="userCount" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Where_Column">
		<where>
			STATISTICS_DATE BETWEEN
			DATE_FORMAT(#{startTime,jdbcType=VARCHAR},'%Y-%m-%d')
			AND
			DATE_FORMAT(#{endTime,jdbcType=VARCHAR},'%Y-%m-%d')
			AND APP_KEY =
			#{appKey,jdbcType=VARCHAR}
			AND UPPER(LOG_TYPE) IN
			<if test="logType!=null">
				(#{logType,jdbcType=VARCHAR})
			</if>
			<if test="logTypes!=null and logTypes.length>0">
				<foreach collection="logTypes" item="item" index="index"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="versions!=null and versions.length>0">
				AND APP_VERSION IN
				<foreach collection="versions" item="item" index="index"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
	</sql>

	<select id="queryNetNewUser" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select network ,sum(new_user) as newUser from NEW_USER_NET_DAY
		<include refid="Where_Column" />
		GROUP BY NETWORK
		ORDER BY newUser LIMIT 10
	</select>

	<select id="queryCount" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		SELECT
		network,
		new_user,
		activeUser,
		start,
		userCount
		FROM
		(
		SELECT
		NETWORK network,
		sum(NEW_USER) new_user
		FROM
		NEW_USER_NET_DAY
		<include refid="Where_Column" />
		GROUP
		BY
		NETWORK
		) AS newNetTable
		LEFT JOIN (
		SELECT
		NETWORK activeNetwork,
		sum(ACTIVE_USER) activeUser
		FROM
		ACTIVE_USER_NET_DAY
		<include refid="Where_Column" />
		GROUP BY
		NETWORK
		) AS
		activeNetTable ON activeNetTable.activeNetwork =
		newNetTable.network
		LEFT JOIN (
		SELECT
		NETWORK startNetwork,
		sum(START)
		start
		FROM
		START_NET_DAY
		<include refid="Where_Column" />
		GROUP BY
		NETWORK
		) AS startNetTable ON
		startNetTable.startNetwork = newNetTable.network
		LEFT JOIN (
		SELECT
		NETWORK countNetwork,
		(
		SELECT
		sum(NEW_USER)
		FROM
		NEW_USER_NET_DAY
		WHERE
		STATISTICS_DATE &lt;=
		DATE_FORMAT(#{endTime,jdbcType=VARCHAR},'%Y-%m-%d') AND NETWORK =
		countNetwork
		) userCount
		FROM
		NEW_USER_NET_DAY
		<include refid="Where_Column" />
		GROUP BY
		NETWORK
		) AS
		countNetTable ON countNetTable.countNetwork = newNetTable.network
		ORDER BY
		network DESC
	</select>
	<select id="queryDetail" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		SELECT
		network,
		new_user,
		activeUser,
		start,
		userCount
		FROM
		(
		SELECT
		NETWORK network,
		sum(NEW_USER) new_user
		FROM
		NEW_USER_NET_DAY
		<include refid="Where_Column" />
		GROUP
		BY
		NETWORK
		) AS newNetTable
		LEFT JOIN (
		SELECT
		NETWORK activeNetwork,
		sum(ACTIVE_USER) activeUser
		FROM
		ACTIVE_USER_NET_DAY
		<include refid="Where_Column" />
		GROUP BY
		NETWORK
		) AS
		activeNetTable ON activeNetTable.activeNetwork =
		newNetTable.network
		LEFT JOIN (
		SELECT
		NETWORK startNetwork,
		sum(START)
		start
		FROM
		START_NET_DAY
		<include refid="Where_Column" />
		GROUP BY
		NETWORK
		) AS startNetTable ON
		startNetTable.startNetwork = newNetTable.network
		LEFT JOIN (
		SELECT
		NETWORK countNetwork,
		(
		SELECT
		sum(NEW_USER)
		FROM
		NEW_USER_NET_DAY
		WHERE
		STATISTICS_DATE &lt;=
		DATE_FORMAT(#{endTime,jdbcType=VARCHAR},'%Y-%m-%d') AND NETWORK =
		countNetwork
		) userCount
		FROM
		NEW_USER_NET_DAY
		<include refid="Where_Column" />
		GROUP BY
		NETWORK
		) AS
		countNetTable ON countNetTable.countNetwork = newNetTable.network
		ORDER BY
		network DESC
		limit ${start},${size}
	</select>

</mapper>