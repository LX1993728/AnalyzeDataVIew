<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/cache  
    http://www.springframework.org/schema/cache/spring-cache.xsd">
	<!-- 缓存配置 -->
	<!-- 启用缓存注解功能(请将其配置在Spring主配置文件中) -->
	<cache:annotation-driven cache-manager="cacheManager" />

	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.maxWait}" />
		<property name="maxTotal" value="${redis.maxActive}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
		<property name="testOnReturn" value="${redis.testOnReturn}" />
	</bean>

	<!-- jedis客户端连接工厂 -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="poolConfig" ref="poolConfig" />
		<property name="password" value="${redis.password}" />
		<property name="timeout" value="${redis.timeout}"/>
		<property name="database" value="${redis.cachedb.index}"/>  <!-- 项目所有缓存放在第0号库 -->
	</bean>

	<!-- redis模板 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />

		<!-- 如果不配置Serializer，那么存储的时候智能使用String，如果用Bean类型存储，那么会提示错误BeanName can't 
			cast -->
		<property name="keySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
	</bean>

	<!-- redis缓存管理器 -->
	<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<constructor-arg name="redisOperations" ref="redisTemplate" />
		<property name="defaultExpiration" value="${redis.expire}" />
		<!-- 在容器启动时加载缓存 -->
		<property name="loadRemoteCachesOnStartup" value="true" />
		<property name="usePrefix" value="true" />
		<property name="cachePrefix">
			<bean class="org.springframework.data.redis.cache.DefaultRedisCachePrefix">
				<constructor-arg name="delimiter" value=":" />
			</bean>
		</property>
	</bean>
	
	<!-- 配置session在Redis服务器共享的一些相关配置 -->
	<!-- <bean class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">	</bean> -->
	
	<!-- 封装配置jedis抽象工具 -->
	<bean id="jedisPoolCommon" class="redis.clients.jedis.JedisPool" abstract="true">
		<constructor-arg name="poolConfig" ref="poolConfig" />
        <constructor-arg name="host" value="${redis.host}" />
        <constructor-arg name="port" value="${redis.port}" type="int" />
        <constructor-arg name="timeout" value="${redis.timeout}" type="int" />
        <constructor-arg name="password" value="#{'${redis.password}'!=''?'${redis.password}':null}" />
	</bean>
	
	<!-- 封装共享session的工具 默认将其存储在第2号库 -->
	<bean id="jedisSessionPool" parent="jedisPoolCommon">
        <constructor-arg name="database" value="${redis.sessiondb.index}" type="int" />
	</bean>
	
	<!-- 封装业务层的工具（供业务层调用） 默认将其存储在第1号库 -->
	<bean id="jedisServicePool" parent="jedisPoolCommon">
        <constructor-arg name="database" value="${redis.servicedb.index}" type="int" />
	</bean>

</beans>