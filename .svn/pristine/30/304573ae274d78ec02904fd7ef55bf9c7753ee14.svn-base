<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.anrong.wulan.admin.dao.ReturnVisitDayMapper">
	<resultMap id="BaseResultMap" type="com.anrong.wulan.admin.po.VisitUserHour">
		<result column="log_type" property="logType" jdbcType="VARCHAR" />
		<result column="app_key" property="appKey" jdbcType="VARCHAR" />
		<result column="app_version" property="appVersion" jdbcType="VARCHAR" />
		<result column="SEVEN_RETURN_VISIT" property="sevenDayRetention"
			jdbcType="INTEGER" />
		<result column="userNum" property="userNum" jdbcType="INTEGER" />
		<result column="visitRates" property="visitRates" jdbcType="DOUBLE" />
		<result column="STATISTICS_DATE" property="ststisticsDate"
			jdbcType="TIMESTAMP" />
	</resultMap>
	<!-- 日期 新增用户 7日回访用户 7日回访用户每月总数 /新增用户每月总数 1 -->
	<select id="listRetent" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		SELECT b.STATISTICS_DATE ststisticsDate,b.NEW_USER
		userNum,a.SEVEN_RETURN_VISIT sevenDayRetention ,
		a.SEVEN_RETURN_VISIT/b.NEW_USER visitRates FROM ( SELECT
		SERVERID,
		LOG_TYPE, APP_KEY, APP_VERSION, SUM(NEW_USER)
		NEW_USER ,
		STATISTICS_DATE
		FROM NEW_USER_HOUR
		<where>
			STATISTICS_DATE BETWEEN
			DATE_FORMAT(#{startTime,jdbcType=VARCHAR},'%Y-%m-%d')
			AND
			DATE_FORMAT(#{endTime,jdbcType=VARCHAR},'%Y-%m-%d')
			AND APP_KEY =
			#{appKey,jdbcType=VARCHAR}
			AND UPPER(LOG_TYPE) IN
			<if test="logType!=null">
				(#{logType,jdbcType=VARCHAR})
			</if>
			<if test="logTypes!=null and logTypes.length>0">
				<foreach collection="logTypes" item="item" index="index"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="versions!=null and versions.length>0">
				AND APP_VERSION IN
				<foreach collection="versions" item="item" index="index"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
		GROUP BY STATISTICS_DATE ) b LEFT JOIN RETURN_VISIT_DAY a ON
		a.LOG_TYPE=b.LOG_TYPE AND a.APP_KEY=b.APP_KEY AND
		a.APP_VERSION=b.APP_VERSION AND a.STATISTICS_DATE=b.STATISTICS_DATE
		ORDER BY b.STATISTICS_DATE,a.SEVEN_RETURN_VISIT/b.NEW_USER
	</select>
	<!-- 日期 新增用户 7日回访用户 7日回访用户每月总数 /新增用户每月总数 2 每月回访总数 对 比 新增用户每月总数 -->
	<select id="selectMounth" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		SELECT s.ststisticsDate
		ststisticsDate,AVG(s.visitRates)
		visitRates,s.appKey,s.logType,s.appVersion FROM
		(SELECT
		b.STATISTICS_DATE ststisticsDate,b.NEW_USER
		userNum,a.SEVEN_RETURN_VISIT sevenDayRetention,b.APP_KEY appKey,
		b.LOG_TYPE logType,b.APP_VERSION appVersion,
		a.SEVEN_RETURN_VISIT/b.NEW_USER visitRates
		FROM ( SELECT SERVERID,
		LOG_TYPE, APP_KEY, APP_VERSION, SUM(NEW_USER)
		NEW_USER ,
		STATISTICS_DATE
		FROM NEW_USER_HOUR GROUP BY STATISTICS_DATE ) b LEFT
		JOIN RETURN_VISIT_DAY a
		ON a.LOG_TYPE=b.LOG_TYPE AND
		a.APP_KEY=b.APP_KEY
		AND
		a.APP_VERSION=b.APP_VERSION AND
		a.STATISTICS_DATE=b.STATISTICS_DATE
		WHERE DATEDIFF(CURDATE(),
		b.STATISTICS_DATE ) > 6) s
		<where>
			s.appKey = #{appKey,jdbcType=VARCHAR}
			AND UPPER(s.logType) IN
			<if test="logType!=null">
				(#{logType,jdbcType=VARCHAR})
			</if>
			<if test="logTypes!=null and logTypes.length>0">
				<foreach collection="logTypes" item="item" index="index"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="versions!=null and versions.length>0">
				AND s.appVersion IN
				<foreach collection="versions" item="item" index="index"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
		GROUP BY MONTH(s.ststisticsDate)
	</select>
	<!-- 回访用户明细 -->
	<select id="queryTop10Retention" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		SELECT b.STATISTICS_DATE ststisticsDate,b.NEW_USER
		userNum,a.SEVEN_RETURN_VISIT sevenDayRetention ,
		a.SEVEN_RETURN_VISIT/b.NEW_USER visitRates FROM ( SELECT
		SERVERID,
		LOG_TYPE, APP_KEY, APP_VERSION, SUM(NEW_USER)
		NEW_USER ,
		STATISTICS_DATE
		FROM NEW_USER_HOUR
		<where>
			STATISTICS_DATE BETWEEN
			DATE_FORMAT(#{startTime,jdbcType=VARCHAR},'%Y-%m-%d')
			AND
			DATE_FORMAT(#{endTime,jdbcType=VARCHAR},'%Y-%m-%d')
			AND APP_KEY =
			#{appKey,jdbcType=VARCHAR}
			AND UPPER(LOG_TYPE) IN
			<if test="logType!=null">
				(#{logType,jdbcType=VARCHAR})
			</if>
			<if test="logTypes!=null and logTypes.length>0">
				<foreach collection="logTypes" item="item" index="index"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="versions!=null and versions.length>0">
				AND APP_VERSION IN
				<foreach collection="versions" item="item" index="index"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
		GROUP BY STATISTICS_DATE ) b LEFT
		JOIN RETURN_VISIT_DAY a
		ON
		a.LOG_TYPE=b.LOG_TYPE AND
		a.APP_KEY=b.APP_KEY
		AND
		a.APP_VERSION=b.APP_VERSION AND
		a.STATISTICS_DATE=b.STATISTICS_DATE

	</select>
</mapper>